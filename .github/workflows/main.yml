name: Build and Deploy

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}"
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: docker-deploy
    runs-on: ubuntu-latest
    needs:
      - build-and-push
    if: ${{ success() }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy to machine
        uses: mpeciakk/docker-deployment-action@master
        with:
          remote_docker_host: ${{ secrets.DEPLOY_TARGET }}
          ssh_key: ${{ secrets.SSH_KEY }}
          deploy_path: ${{ secrets.DEPLOY_PATH }}
          stack_file_name: docker-compose.prod.yml
          pull_images: true
          args: up -d

  notify:
    name: notify
    runs-on: ubuntu-latest
    needs:
      - deploy
    if: ${{ always() }}

    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
